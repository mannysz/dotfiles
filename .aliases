# common aliases
alias ll='ls -laG'
alias manage='python manage.py'
alias clear-branches='for branch in `git branch | egrep -v \s?(master|pm-develop).*$ | xargs`; do git branch -D $branch; done'
alias g=git
alias intel="arch -x86_64"
alias intel-shell="intel $SHELL"
alias pyenv="arch -x86_64 env LDFLAGS=\"-L$(xcrun --show-sdk-path)/usr/lib\" SYSTEM_VERSION_COMPAT=1 pyenv"
alias vim=nvim


# User Defined Functions

# returns all directories listed in LOOKUPPATH function arguments
function lookup_path {
    echo "${LOOKUPPATH//:/ }"
}

# list all projects in lookup_path
function list_workspace {
    for ddest in $(lookup_path); do
        if [ -d $ddest ]; then
            ls $ddest
        fi
    done | xargs
}

# change directory into a folder defined in LOOKUPPATH
function goto {
    for ddest in $(lookup_path); do
        if [ -d $ddest/$1 ]; then
            cd $ddest/$1;
            return 0
        fi
    done
    echo "Directory not found in lookup path."
    return 1
}

# overrides bultin change directory to autoload .env
function cd {
    if [ -f "${@:1}/.env" ]; then
        source ${@:1}/.env
        echo "Loaded $(basename $1)/.env file."
    fi
    builtin cd "${@:1}"
}

# runs commands defined in environment variables
# good to use with project .env files
function run {
    cmd=$1
    if ! [ -z ${1+x} ]; then
        # call defined command
        ${!1}
    fi
}

# encrypts a file with a prompted password
function encrypt {
    openssl aes-256-cbc -a -salt -in $1 -out $1.enc
}

# decrypts a file
function decrypt {
    openssl aes-256-cbc -d -a -in $1 -out $1.new
}

# converts a list of video files into mp3
function mpsconvert {
    find . -type f -exec bash -c 'FILE="$1"; ffmpeg -i "${FILE}" -vn -ab 128k -ar 44100 -y "${FILE}.mp3";' _ '{}' \;
}
